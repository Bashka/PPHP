<?php
namespace PPHP\tests\services\database;

spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-07-06 at 19:35:48.
 */
class ConnectionManagerTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\services\database\ConnectionManager
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = \PPHP\services\database\ConnectionManager::getInstance();
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers PPHP\services\database\ConnectionManager::getNewPDO
   */
  public function testGetNewPDO(){
    $PDO = $this->object->getNewPDO();
    $this->assertFalse($PDO === $this->object->getNewPDO());
    $this->assertInstanceOf('\PPHP\tools\classes\standard\storage\database\PDO', $PDO);
  }

  /**
   * @covers PPHP\services\database\ConnectionManager::getPDO
   */
  public function testGetPDO(){
    $this->assertInstanceOf('\PPHP\tools\classes\standard\storage\database\PDO', $this->object->getNewPDO());
  }

  /**
   * @covers PPHP\services\database\ConnectionManager::getInstance
   */
  public function testGetInstance(){
    $connectManager = \PPHP\services\database\ConnectionManager::getInstance();
    $this->assertInstanceOf('\PPHP\services\database\ConnectionManager', $connectManager);
    $this->assertTrue($connectManager === $this->object);
  }

  /**
   * @covers PPHP\services\database\ConnectionManager::setAttribute
   * @covers PPHP\services\database\ConnectionManager::getAttribute
   */
  public function testSetAttribute(){
    $connectManager = \PPHP\services\database\ConnectionManager::getInstance();
    $rewriteAttributeValue = $this->object->getAttribute('Article');
    $connectManager->setAttribute('Article', 'Test');
    $this->assertEquals('Test', $this->object->getAttribute('Article'));
    $connectManager->setAttribute('Article', $rewriteAttributeValue);
  }
}
