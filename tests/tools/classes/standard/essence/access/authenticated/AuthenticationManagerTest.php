<?php
namespace PPHP\tests\tools\classes\standard\essence\access\authenticated;

spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-08-02 at 00:54:59.
 */
class AuthenticationManagerTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\essence\access\authenticated\AuthenticationManager
   */
  protected $object;

  /**
   * @var MockDataMapper
   */
  protected $dataMapper;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = \PPHP\tools\classes\standard\essence\access\authenticated\AuthenticationManager::getInstance();
    $this->dataMapper = new MockDataMapper();
    $this->dataMapper->restart();
    $this->object->setDataMapper($this->dataMapper);
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers PPHP\tools\classes\standard\essence\access\authenticated\AuthenticationManager::authenticate
   */
  public function testAuthenticate(){
    $mock = new MockAuthEntity();
    $mock->setOID(1);
    $mock->setPassword('pass');
    $this->assertTrue($this->object->authenticate($mock));
  }

  /**
   * @covers PPHP\tools\classes\standard\essence\access\authenticated\AuthenticationManager::authenticate
   */
  public function testAuthenticateUnsuccessful(){
    $mock = new MockAuthEntity();
    $mock->setOID(1);
    $mock->setPassword('passBad');
    $this->assertFalse($this->object->authenticate($mock));
  }
}
