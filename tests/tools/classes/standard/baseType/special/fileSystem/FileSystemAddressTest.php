<?php
namespace PPHP\tests\tools\classes\standard\baseType\special\fileSystem;
spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-10-11 at 20:17:48.
 */
class FileSystemAddressTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = new \PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress('testDir/test');
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::is
   */
  public function testIs(){
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::is(''));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::is('a'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::is('a/b'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::is('a/b/c'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::is('/a'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::is('a//b'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::is('a///b'));
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress::getIsRoot
   */
  public function testGetIsRoot(){
    $this->assertFalse($this->object->getIsRoot());
    $address = new \PPHP\tools\classes\standard\baseType\special\fileSystem\FileSystemAddress('/testDir/test');
    $this->assertTrue($address->getIsRoot());
  }
}
