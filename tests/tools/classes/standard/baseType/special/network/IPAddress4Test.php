<?php
namespace PPHP\tests\tools\classes\standard\baseType\special\network;

spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-10-12 at 20:05:52.
 */
class IPAddress4Test extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\baseType\special\network\IPAddress4
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = new \PPHP\tools\classes\standard\baseType\special\network\IPAddress4('127.0.0.1');
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is
   */
  public function testIs(){
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is(''));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('0.0.0.0'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('255.255.255.255'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('-1.0.0.0'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('256.0.0.0'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('0.0.0.'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('0.0.0'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('0.0.0.0.'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('0.0.0.0.0'));
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\IPAddress4::getTrio
   */
  public function testGetTrio(){
    $this->assertEquals(127, $this->object->getTrio(0));
    $this->assertEquals(0, $this->object->getTrio(1));
    $this->assertEquals(0, $this->object->getTrio(2));
    $this->assertEquals(1, $this->object->getTrio(3));
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\IPAddress4::getTrioBin
   */
  public function testGetTrioBin(){
    $this->assertEquals('1111111', $this->object->getTrioBin(0));
  }
}
