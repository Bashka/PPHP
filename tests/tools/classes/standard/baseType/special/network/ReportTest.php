<?php
namespace PPHP\tests\tools\classes\standard\baseType\special\network;
spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-10-12 at 19:42:01.
 */
class ReportTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\baseType\special\network\Report
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = new \PPHP\tools\classes\standard\baseType\special\network\Report('http://');
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\Report::is
   */
  public function testIs(){
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is(''));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('http://'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('ftp://'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('http:/'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('http//'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('http'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('://'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('http:'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is('test://'));
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\Report::getName
   */
  public function testGetName(){
    $this->assertEquals('http', $this->object->getName());
  }
}
