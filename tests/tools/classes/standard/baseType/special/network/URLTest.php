<?php
namespace PPHP\tests\tools\classes\standard\baseType\special\network;

spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-10-13 at 12:29:45.
 */
class URLTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\baseType\special\network\URL
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = new \PPHP\tools\classes\standard\baseType\special\network\URL('http://test.com:8080/testDir/testFile.txt');
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\URL::is
   */
  public function testIs(){
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\IPAddress4::is(''));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://test'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://test.com'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://test.com:8080'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://test.com/test/text.txt'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://test.com:8080/test/text.txt'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\URL::is('test://test.com:8080/test/text.txt'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://a:8080/test/text.txt'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://a:/test/text.txt'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://test.com:8080/test/'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\URL::is('http://test.com:8080/'));
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\URL::getReport
   */
  public function testGetReport(){
    $this->assertEquals('http://', $this->object->getReport()->getVal());
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\URL::getAddress
   */
  public function testGetAddress(){
    $this->assertEquals('test.com', $this->object->getAddress()->getVal());
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\URL::getPort
   */
  public function testGetPort(){
    $this->assertEquals('8080', $this->object->getPort()->getVal());
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\URL::getPort
   */
  public function testGetPortIfNotExists(){
    $this->object = new \PPHP\tools\classes\standard\baseType\special\network\URL('http://test.com/testDir/testFile.txt');
    $this->assertEquals(null, $this->object->getPort());
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\URL::getFileSystemAddress
   */
  public function testGetFileSystemAddress(){
    $this->assertEquals('/testDir/testFile.txt', $this->object->getFileSystemAddress()->getVal());
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\URL::getFileSystemAddress
   */
  public function testGetFileSystemAddressIfNotExists(){
    $this->object = new \PPHP\tools\classes\standard\baseType\special\network\URL('http://test.com');
    $this->assertEquals(null, $this->object->getFileSystemAddress());
    $this->object = new \PPHP\tools\classes\standard\baseType\special\network\URL('http://test.com/');
    $this->assertEquals(null, $this->object->getFileSystemAddress());
  }
}
