<?php
namespace PPHP\tests\tools\classes\standard\baseType\special\network;

spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-11-21 at 19:23:39.
 */
class EMailTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\baseType\special\network\EMail
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = new \PPHP\tools\classes\standard\baseType\special\network\EMail('Login@email.com');
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\EMail::is
   */
  public function testIs(){
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\EMail::is(''));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\EMail::is('a@b.c'));
    $this->assertTrue(\PPHP\tools\classes\standard\baseType\special\network\EMail::is('1_-a@email.com'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\EMail::is('#@email.com'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\EMail::is('Loginemail.com'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\EMail::is('Login@'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\EMail::is('@email.com'));
    $this->assertFalse(\PPHP\tools\classes\standard\baseType\special\network\EMail::is('Login@1'));
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\EMail::getDomain
   */
  public function testGetDomain(){
    $this->assertEquals('email.com', $this->object->getDomain()->getVal());
    $this->assertEquals('com', $this->object->getDomain()->getComponent(0));
  }

  /**
   * @covers PPHP\tools\classes\standard\baseType\special\network\EMail::getLocal
   */
  public function testGetLocal(){
    $this->assertEquals('Login', $this->object->getLocal());
  }
}
