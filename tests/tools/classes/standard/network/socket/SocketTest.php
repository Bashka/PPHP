<?php
namespace PPHP\tests\tools\classes\standard\network\socket;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-12-09 at 20:52:55.
 */
class SocketTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\network\socket\Socket
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = new \PPHP\tools\classes\standard\network\socket\Socket;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers PPHP\tools\classes\standard\network\socket\Socket::connect
   * @covers PPHP\tools\classes\standard\network\socket\Socket::listen
   */
  public function testConnect(){
    $serverSocket = new \PPHP\tools\classes\standard\network\socket\Socket();
    $serverSocket->listen('localhost', 10000);

    $clientStream = $this->object->connect('localhost', 10000);
    $this->assertInstanceOf('\PPHP\tools\classes\standard\network\socket\Stream', $clientStream);
    $clientStream->close();
    $serverSocket->shutdown();
  }

  /**
   * @covers PPHP\tools\classes\standard\network\socket\Socket::accept
   */
  public function testAccept(){
    $clientSocket = new \PPHP\tools\classes\standard\network\socket\Socket();
    $this->object->listen('localhost', 10000);

    $clientStream = $clientSocket->connect('localhost', 10000);
    $serverStream = $this->object->accept();
    $this->assertInstanceOf('\PPHP\tools\classes\standard\network\socket\Stream', $serverStream);
    $serverStream->close();
    $clientStream->close();
    $this->object->shutdown();
  }
}
