<?php
namespace PPHP\tests\tools\classes\standard\storage\database\queryCreator;
use PPHP\tests\tools\patterns\database\TestLongObject;

spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-06-29 at 20:54:30.
 */
class AssociationQueryCreatorTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\storage\database\queryCreator\AssociationQueryCreator
   */
  protected $object;

  /**
   * @var  \PPHP\tools\patterns\database\LongObject
   */
  static protected $longObject;

  /**
   * @var \PPHP\tools\patterns\metadata\reflection\ReflectionProperty
   */
  static protected $assocField;

  /**
   * Тестовый сервис автоинкрементации.
   * @var TestAutoinc
   */
  static protected $autoinc;

  public static function setUpBeforeClass(){
    self::$longObject = new TestLongObject();
    self::$longObject->setOID(1);
    self::$assocField = self::$longObject->getReflectionProperty('publProp');
    self::$autoinc = TestAutoinc::getInstance();
  }

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = new \PPHP\tools\classes\standard\storage\database\queryCreator\AssociationQueryCreator(self::$autoinc );
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers \PPHP\tools\classes\standard\storage\database\queryCreator\AssociationQueryCreator::createAssociationSelectQuery
   */
  public function testCreateAssociationSelectQuery(){
    $this->assertEquals('SELECT `propOneField` as propOne,`propTwoField` as propTwo,`Key` as OID FROM `Assoc`  WHERE (`ChildTable` = "$/PPHP/tests/tools/patterns/database/TestLongObject:1")', $this->object->createAssociationSelectQuery(self::$longObject, self::$assocField)->interpretation());
  }
}
