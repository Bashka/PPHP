<?php
namespace PPHP\tests\tools\classes\standard\storage\database\queryCreator;
use PPHP\tests\tools\patterns\database\TestLongObject;

spl_autoload_register(function($className){
  require_once $_SERVER['DOCUMENT_ROOT'] . '/' . str_replace('\\', '/', $className) . '.php';
});

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-06-22 at 21:37:58.
 */
class FindingQueryCreatorTest extends \PHPUnit_Framework_TestCase{
  /**
   * @var \PPHP\tools\classes\standard\storage\database\queryCreator\FindingQueryCreator
   */
  protected $object;

  /**
   * @var \PPHP\tests\tools\patterns\database\TestLongObject
   */
  static protected $originator;

  /**
   * @var \PPHP\tests\tools\patterns\database\TestLongObject
   */
  static protected $fourProp;

  /**
   * Тестовый сервис автоинкрементации.
   * @var TestAutoinc
   */
  static protected $autoinc;

  public static function setUpBeforeClass(){
    self::$originator = new TestLongObject();
    self::$originator->setOID(1);
    self::$fourProp = new TestLongObject();
    self::$fourProp->setOID(2);
    self::$originator->setLinkProp(self::$fourProp);
    self::$autoinc = TestAutoinc::getInstance();
  }

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp(){
    $this->object = new \PPHP\tools\classes\standard\storage\database\queryCreator\FindingQueryCreator(self::$autoinc);
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown(){
  }

  /**
   * @covers \PPHP\tools\classes\standard\storage\database\queryCreator\FindingQueryCreator::createFindingQuery
   */
  public function testCreateFindingQuery(){
    $this->assertEquals('SELECT `privField` as privProp,`protField` as protProp,`linkField` as linkProp,`parentProtField` as parentProtProp,`parentPublField` as parentPublProp,ChildTable.Key as OID FROM `ChildTable` INNER JOIN `ParentTable` ON (ChildTable.Key = ParentTable.Key) WHERE ((`linkField` = "$/PPHP/tests/tools/patterns/database/TestLongObject:2") AND (`parentProtField` = "2") AND (ChildTable.Key = "1"))', $this->object->createFindingQuery(self::$originator->getReflectionClass(), ['linkProp' => self::$fourProp, 'parentProtProp' => 2, 'OID' => 1])->interpretation());
  }
}
