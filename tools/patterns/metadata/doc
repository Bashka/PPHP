h1: Терминология
- Метаданные - данные, позволяющие описать другие данные;
- Аннотация - именнованное значение метаданных;
- Объекты с устойчивым состоянием - объекты, состояние которых сохраняется на протяжении одной сессий даже при повторной инстанциации.

h1: Необходимость аннотирования
Применение метаданных оправдывает себя в тех случаях, когда необходимо добавить некоторую информацию о классе или его членах, на пример для связывания объектов класса с базой данных, их хранящей (см. PPHP/tools/classes/standard/storage/database/ORM).
Для аннотирования объектов достаточно выполнить два условия:
- Реализовать хранилище метаданных, связанных с конкретным объектом;
- Обеспечить объект устойчивым состоянием.
Данный пакет содержит решение первого условия, он включает интерфейс и trait, позволяющие аннотировать объекты классов. Любой класс, объекты которого могут быть аннотированы, должен реализовывать интерфейс Described. TDescribed представляет полную реализацию этого интерфейса с учетом наследования.
Приведем пример класса, объекты которого могут быть аннотированы:
code: php 100
class MyDescribed implements Described{
use TDescribed;
}

$o = new MyDescribed;
$o->setMetadata('metadataName', 'value'); // Установка метаданных.
echo $o->getMetadata('metadataName'); // value - значение установленных метаданных.
code: end

h1: Необходимость устойчивости состояния
Если обратиться к реализации интерфейса Described, trait TDescribed, то можно понять как храняться метаданные объекта. Для этих целей используется простой ассоциативный массив, который отчищается при удалении объекта. Именно из за этого аннотировать возможно только те объекты, которые могут сохранять свое состояние даже при потере ссылки на них. Как правило такие классы используют статичные ссылки на свои экземпляры (см. PPHP/tools/patterns/metadata/reflection).