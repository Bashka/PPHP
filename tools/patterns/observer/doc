h1: Терминология
- Издатель - объект, оповещающий свой список подписчиков об изменении своего состояния;
- Подписчик - объект, ожидающий оповедения от издателя об изменении его состояния и реагирующий на это;
- Оповещение - сигнал издателя подписчикам об изменении состояния издателя.

h1: Цели оповещения
Когда изменение состояния объекта должно сказываться на различных частях системы используется механизм оповещения. Данный механизм позволяет регистрировать подписчиков (реагирующие компоненты) у издателя (изменяемый объект) так, чтобы подписчики реагировали на изменение состояния издателя.

h1: Классическая реализация
Стандартная библиотека классов языка PHP включает два интерфейса, использование которых позволяет реализовать механизм оповещения:
- SplSubject - интерфейс, реализуемый издателями;
- SplObserver - интерфейс, реализуемый подписчиками.
Так как реакция на оповещение у всех подписчиков различна, интерфейс SplObserver (в частности метод update) реализуется конкретным классом, но интерфейс SplSubject всеми классами реализуется аналогично, потому данный пакет включает TSubject, реализующий этот интерфейс.
В качестве примера создадим простую модель издатель/подписчик:
code: php 340
// Издатель.
class A implements SplSubject{
  public function changeState(){
    ...
    $this->notify();
  }
}

// Подписчик.
class B implements SplObserver{
  public function update(SplSubject $subject){
    echo 'React';
  }
}

$a = new A;
$b1 = new B;
$b2 = new B;
$b3 = new B;
// Добавление подписчиков в список издателя.
$a->attach($b1);
$a->attach($b2);
$a->attach($b3);
$a->changeState(); // Автоматическое оповещение подписчиков.
code: end
TSubject реализует весь интерфейс SplSubject, что позволяет легко добавлять возможность оповещения классам-издателям.