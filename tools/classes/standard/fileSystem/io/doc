h1: Файловые потоки ввода/вывода
Файловые потоки ввода/вывода имеют следующие свойства:
- Управляемый доступ к данным - данные в этих потоках могут быть получены или записаны не последовательно, а с любой доступной позиции;
- Блокировка - работа с файловыми потоками ввода/вывода может повлечь за собой ошибки, связанные с множественным доступом к ресурсу. Для решения этой проблемы применяются механизмы блокировки файла для монопольного или выборочного доступа к нему. Для снятия этих блокировок файловые потоки ввода/вывода должны быть закрыты после использования.

h1: Реализация файловых потоков
Представлениями файловых потоков ввода/вывода являются классы FileWriter и FileReader данного пакета. Эти классы являются дочерними по отношению к стандартным потока ввода/вывода системы (см. PPHP/tools/patterns/io) и дополнены traits FileClosed и FileSeekIO, позволяющими закрывать эти потоки и реализующие произвольный доступ к хранимым в них данным.
Приведем пример работы с этими классами:
code: php 160
$is = new FileReader(fopen('file', 'rb')); // Получение файлового потока ввода.
echo $is->read(); // Получение первого байта в потоке (чтение из файла).
echo $is->read(); // Получение второго байта в потоке.
$is->setPosition(5); // Установка позиции текущего байта.
echo $is->read(); // Получение пятого байта в потоке.
echo $is->readAll(); // Получение оставшегося содержимого потока.
$is->close(); // Закрытие потока ввода.
$os = new FileWriter(fopen('file', 'r+b')); // Получение файлового потока вывода.
$os->write('Hello'); // Запись в файловый поток вывода (в файл).
$os->close(); // Закрытие файлового потока вывода.
code: end
Как видно, эти потоки могут быть закрыты и допускают произвольный доступ к данным в них.
Пример демонстрирует процесс получения файлового потока ввода/вывода с использованием стандартной функции PHP fopen, но чаще файловые потоки ввода/вывода создаются с использованием методов getReader и getWriter класса File (см. PPHP/tools/classes/standard/fileSystem), это наиболее предпочтительный вариант, так как выполняется автоматическая блокировка целевых файлов.
code: php 120
$f = new File('PPHP/file');
$is = $f->getReader(); // Получение файлового потока ввода.
echo $is->read(); // Получение первого байта в потоке (чтение из файла).
$is->close();
$os = $f->getWriter(); // Получение файлового потока вывода.
$os->write('Hello'); // Запись в файловый поток вывода (в файл).
$os->close();
code: end

h1: Блокировка
Для реализации механизма автоматической блокировки файлов в пакете присутствуют классы BlockingFileReader и BlockingFileWriter. Они реализуют интерфейс SplSubject и использованием TSubject (см. PPHP/tools/patterns/observer) благодаря которому, могут информировать файлы о том, что поток закрыт, что снимает с него блокировку. Это необходимо, так как за установку и снятие блокировки с файла отвечает не файловый поток ввода/вывода, а класс File (см. PPHP/tools/classes/standard/fileSystem), который и является "наблюдателем" созданных им потоков и реагирует на их закрытие снятием блокировки с файла.